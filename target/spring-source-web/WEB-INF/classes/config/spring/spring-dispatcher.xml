<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:task="http://www.springframework.org/schema/task"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:util="http://www.springframework.org/schema/util"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	   xsi:schemaLocation="
	http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util-3.2.xsd
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	http://www.springframework.org/schema/jdbc
	http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/data/jpa
	http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
	http://www.springframework.org/schema/task
	http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<!--<import resource="spring-dispatcher.xml"></import>-->
	<!-- 加载数据库配置文件
		<bean
			class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
			<property name="ignoreUnresolvablePlaceholders" value="true" />
			<property name="locations">
				<list>
					<value>classpath:config.properties</value>
				</list>
			</property>
		</bean>  -->
	<context:component-scan base-package="com.zhuguang.jack" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<!--<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Component"/>-->
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
	</context:component-scan>

	<context:property-placeholder location="classpath:config/core/core.properties" />

	<!-- 解决springMVC响应数据乱码   text/plain就是响应的时候原样返回数据
		<mvc:annotation-driven>
			<mvc:message-converters register-defaults="true">
				<bean class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes" value = "text/plain;charset=UTF-8" />
				</bean>
			</mvc:message-converters>
		</mvc:annotation-driven>-->
	<!--<bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
			<property name="supportedMediaTypes" value = "text/plain;charset=UTF-8" />
		</bean>-->
	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<!--静态资源，location webapp根目录下的路径-->
	<mvc:resources mapping="/css/**" location="/WEB-INF/css/"/>
	<mvc:resources mapping="/images/**" location="/WEB-INF/img/"/>
	<mvc:resources mapping="/js/**" location="/WEB-INF/js/"/>

	<bean id="userInterceptor" class="com.zhuguang.jack.handlerInterceptor.UserInterceptor"></bean>
	<mvc:interceptors>
		<!--
		   /**的意思是所有文件夹及里面的子文件夹
		   /*是所有文件夹，不含子文件夹
		   /是web项目的根目录
		 -->
		<mvc:interceptor>
			<mvc:mapping path="/user/*" />
			<!-- 需排除拦截的地址 -->
			<!-- <mvc:exclude-mapping path="/userController/login"/>  -->
			<ref bean="userInterceptor"/>
		</mvc:interceptor>
		<!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法  -->
	</mvc:interceptors>
	<!-- 配置视图解析 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!--<mvc:view-controller path="/" view-name="redirect:/index" />-->

	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="interceptors">
			<list>
				<bean class="com.zhuguang.jack.handlerInterceptor.AuthInterceptor"></bean>
			</list>
		</property>
	</bean>

	<bean id="handlerAdapter"
		  class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" /><!-- json转换器 -->
				<!--<ref bean="stringHttpMessageConverter"/>-->
			</list>
		</property>
	</bean>

	<!-- 支持上传文件 -->
	<!-- 控制器异常处理 -->
	<bean id="exceptionResolver"
		  class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Exception">
					error
				</prop>
			</props>
		</property>
	</bean>
</beans>
	
	
	

